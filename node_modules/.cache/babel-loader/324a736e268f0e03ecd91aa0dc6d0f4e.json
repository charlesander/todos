{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/test/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todosBackup: [],\n      todos: [],\n      users: [],\n      searchTerm: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this._getTodos().then(this._getUsers());\n  }\n\n  _getTodos() {\n    return axios.get('https://jsonplaceholder.typicode.com/todos').then(response => {\n      let todos = response.data;\n      /*\n      let todos = response.data.map((todo) => {\n          todo.displayTitle = todo.title;\n          return todo\n      })*/\n\n      this.setState({\n        todos: todos,\n        todosBackup: todos\n      });\n    });\n  }\n\n  _getUsers() {\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      this.setState({\n        users: response.data\n      });\n    });\n  }\n\n  createMarkup(displayTitle) {\n    //let dtsh = displayTitle.replace(new RegExp(this.state.searchTerm, 'g'), '<strong>' + displayTitle + '</strong>');\n    let dtsh = displayTitle;\n    console.log(this.state.searchTerm.length);\n\n    if (this.state.searchTerm.length > 0) {\n      dtsh = dtsh.replace(new RegExp(this.state.searchTerm, 'g'), '<span style=\"color: red\">' + this.state.searchTerm + '</span>');\n    }\n\n    return {\n      __html: dtsh\n    };\n  }\n\n  _formatTodosListing() {\n    let todos = this.state.todos.map(todo => {\n      var user = this.state.users.find(function (user) {\n        return user.id === todo.userId;\n      });\n      todo.userName = user && user.name ? user.name : \"Unknown\";\n      return React.createElement(\"tr\", {\n        key: todo.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, todo.id), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, todo.userName), React.createElement(\"th\", {\n        dangerouslySetInnerHTML: this.createMarkup(todo.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, todo.completed ? \"Yes\" : \"No\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.deleteTodo.bind(this, todo.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Delete\")));\n    });\n    return todos;\n  }\n\n  search(event) {\n    this.setState({\n      searchTerm: event.target.value\n    });\n    /*\n     let todos = this.state.todosBackup;\n     if (event.target.value.length > 0) {\n     todos = todos.map((todo) => {\n     todo.displayTitle = () => ({__html: 'Some <strong>text</strong> here'});//todo.title.replace(new RegExp(event.target.value, 'g'), '<strong>' + event.target.value + '</strong>');\n     return todo\n     })\n     } else {\n     todos = todos.map((todo) => {\n     todo.displayTitle = todo.title;\n     return todo\n     })\n     }\n     console.log(todos);\n     this.setState({\n     todos: todos\n     });searchTerm\n     */\n    //console.log(event.target.value.length)\n    //console.log(this.state.todos)\n    //console.log(this.state.todosBackup)\n\n    /*\n     if(event.target.value.length === 1 && !this.state.todosBackup.length) {\n     let todos = this.state.todos\n     this.setState({\n     todosBackup: todos\n     })\n     ///\n     console.log(\"backing up todos\")\n     } else if (!event.target.value.length && this.state.todosBackup.length) {\n     let todosBackup = this.state.todosBackup;\n     this.setState({\n     todos: todosBackup,\n     todosBackup: []\n     })\n     console.log(\"returning todos\")\n     }*/\n\n    /*else {\n     let todos = this.state.todos.map((todo) => {\n     todo.displayTitle = todo.title.replace(new RegExp(event.target.value, 'g'), '<strong>'+event.target.value+'</strong>');\n     return todo\n     })\n     this.setState({\n     todos: todos\n     });\n     }*/\n    //console.log(\"test: \" + event.target.value);\n    //console.log(this.state.todos)\n    //console.log(this.state.todosBackup)\n  }\n\n  deleteTodo(id) {\n    let todos = this.state.todos.filter(function (todo) {\n      return todo.id !== id;\n    });\n    this.setState({\n      todos: todos\n    });\n  }\n\n  render() {\n    let todos = this._formatTodosListing();\n    /*\n     let users = this.state.users.map((user) => {\n     return (\n     <h5>{user.name}</h5>\n     )\n     });\n     */\n\n    /*\n     {users}\n     */\n\n\n    return React.createElement(\"div\", {\n      className: \"App container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: this.search.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Completed\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, todos)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/test/src/App.js"],"names":["React","Component","axios","App","state","todosBackup","todos","users","searchTerm","componentWillMount","_getTodos","then","_getUsers","get","response","data","setState","createMarkup","displayTitle","dtsh","console","log","length","replace","RegExp","__html","_formatTodosListing","map","todo","user","find","id","userId","userName","name","title","completed","deleteTodo","bind","search","event","target","value","filter","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nclass App extends Component {\n\n    state = {\n        todosBackup: [],\n        todos: [],\n        users: [],\n        searchTerm: \"\",\n    }\n\n    componentWillMount() {\n        this._getTodos()\n            .then(this._getUsers())\n    }\n\n    _getTodos() {\n        return axios.get('https://jsonplaceholder.typicode.com/todos').then((response) => {\n\n            let todos = response.data;\n            /*\n            let todos = response.data.map((todo) => {\n                todo.displayTitle = todo.title;\n                return todo\n            })*/\n\n            this.setState({\n                todos: todos,\n                todosBackup: todos\n            })\n        });\n    }\n\n    _getUsers() {\n        axios.get('https://jsonplaceholder.typicode.com/users').then((response) => {\n            this.setState({\n                users: response.data\n            })\n        });\n    }\n\n    function\n\n    createMarkup(displayTitle) {\n\n        //let dtsh = displayTitle.replace(new RegExp(this.state.searchTerm, 'g'), '<strong>' + displayTitle + '</strong>');\n        let dtsh = displayTitle;\n        console.log(this.state.searchTerm.length);\n        if (this.state.searchTerm.length > 0) {\n            dtsh = dtsh.replace(\n                new RegExp(this.state.searchTerm, 'g'),\n                '<span style=\"color: red\">' + this.state.searchTerm + '</span>'\n            );\n        }\n\n        return {__html: dtsh};\n    }\n\n    _formatTodosListing() {\n        let todos = this.state.todos.map((todo) => {\n\n            var user = this.state.users.find(function (user) {\n                return user.id === todo.userId;\n            });\n\n            todo.userName = (user && user.name) ? user.name : \"Unknown\";\n\n            return (\n                <tr key={todo.id}>\n                    <th>{todo.id}</th>\n                    <th>{todo.userName}</th>\n                    <th dangerouslySetInnerHTML={this.createMarkup(todo.title)}></th>\n                    <th>{todo.completed ? \"Yes\" : \"No\"}</th>\n                    <th>\n                        <button className=\"btn btn-danger\"\n                                onClick={this.deleteTodo.bind(this, todo.id)}>Delete\n                        </button>\n                    </th>\n                </tr>\n            )\n        });\n        return todos;\n    }\n\n    search(event) {\n\n        this.setState({\n            searchTerm: event.target.value\n        });\n        /*\n         let todos = this.state.todosBackup;\n         if (event.target.value.length > 0) {\n         todos = todos.map((todo) => {\n         todo.displayTitle = () => ({__html: 'Some <strong>text</strong> here'});//todo.title.replace(new RegExp(event.target.value, 'g'), '<strong>' + event.target.value + '</strong>');\n         return todo\n         })\n         } else {\n         todos = todos.map((todo) => {\n         todo.displayTitle = todo.title;\n         return todo\n         })\n         }\n         console.log(todos);\n         this.setState({\n         todos: todos\n         });searchTerm\n         */\n\n        //console.log(event.target.value.length)\n        //console.log(this.state.todos)\n        //console.log(this.state.todosBackup)\n        /*\n         if(event.target.value.length === 1 && !this.state.todosBackup.length) {\n         let todos = this.state.todos\n         this.setState({\n         todosBackup: todos\n         })\n         ///\n         console.log(\"backing up todos\")\n         } else if (!event.target.value.length && this.state.todosBackup.length) {\n         let todosBackup = this.state.todosBackup;\n         this.setState({\n         todos: todosBackup,\n         todosBackup: []\n         })\n         console.log(\"returning todos\")\n         }*/\n        /*else {\n         let todos = this.state.todos.map((todo) => {\n         todo.displayTitle = todo.title.replace(new RegExp(event.target.value, 'g'), '<strong>'+event.target.value+'</strong>');\n         return todo\n         })\n         this.setState({\n         todos: todos\n         });\n         }*/\n        //console.log(\"test: \" + event.target.value);\n        //console.log(this.state.todos)\n        //console.log(this.state.todosBackup)\n\n\n    }\n\n    deleteTodo(id) {\n\n        let todos = this.state.todos.filter(function (todo) {\n            return todo.id !== id\n        });\n        this.setState({\n            todos: todos\n        });\n    }\n\n    render() {\n\n        let todos = this._formatTodosListing();\n\n        /*\n         let users = this.state.users.map((user) => {\n         return (\n         <h5>{user.name}</h5>\n         )\n         });\n         */\n        /*\n         {users}\n         */\n\n        return (\n\n            <div className=\"App container\">\n\n                <input type=\"text\" placeholder=\"Search\" onChange={this.search.bind(this)}/>\n                <table>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>User</th>\n                        <th>Title</th>\n                        <th>Completed</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {todos}\n                    </tbody>\n                </table>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}